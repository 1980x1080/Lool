local requiredPlaceId = 13253735473
if game.PlaceId ~= requiredPlaceId then
warn(("This script is intended for use in game with place ID %d, but the current game has place ID %d."):format(requiredPlaceId, game.PlaceId))
return
end
repeat task.wait() until game:IsLoaded()

--// Locals
local last_updated = "17/07/2023"
local Camera = game:GetService("Workspace").Camera
local Camera = game:GetService("Workspace").CurrentCamera
local Mouse = game.Players.LocalPlayer:GetMouse()
local UserInputService = game:GetService("UserInputService")
local Decimals = 2
local Clock = os.clock()

--// Lph
if not LPH_OBFUSCATED then
  LPH_JIT = function(...) return ... end
  LPH_JIT_MAX = function(...) return ... end
  LPH_JIT_ULTRA = function(...) return ... end
  LPH_NO_VIRTUALIZE = function(...) return ... end
  LPH_NO_UPVALUES = function(f) return(function(...) return f(...) end) end
  LPH_ENCSTR = function(...) return ... end
  LPH_STRENC = function(...) return ... end
  LPH_HOOK_FIX = function(...) return ... end
  LPH_CRASH = function() return print(debug.traceback()) end
end

--// Ui
local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/BigHacker123/Library.lua/main/Library.lua'))()
local SaveManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/addons/SaveManager.lua'))()
local ThemeManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/BigHacker123/Library.lua/main/Theme.lua'))()
local skybox_assets = loadstring(game:HttpGet("https://raw.githubusercontent.com/BigHacker123/skybox/main/.lua", true))()
--
local Build = "free";local Color = "#00FF00";local Ver = "v1.1b"
if Build == "free" then Color = '#00FF00' Ver = "v1.1b" end
local Window = Library:CreateWindow({ 
Size = UDim2.fromOffset(550, 610),
Title = "Crack by - 6lazer and lonerslate",
Center = true,
AutoShow = true
})
local Tabs = {MainTab = Window:AddTab('main'),UISettings = Window:AddTab('settings')}

------------------------------------------------------------------------
--// Main Tab

--
local WeaponTabBox = Tabs.MainTab:AddRightTabbox('weapon mods')
local WeaponTab = WeaponTabBox:AddTab('weapon mods')

--* Weapon Mods *--

local NoRecoil = false
WeaponTab:AddToggle('RECOIL', {Text = 'no recoil', Default = false}):OnChanged(function(Value)
NoRecoil = Value
end)

--
local HeadHitboxTabBox = Tabs.MainTab:AddRightTabbox('head hitbox')
local HeadHitboxTab = HeadHitboxTabBox:AddTab('head hitbox')

local antihitbox
antihitbox = hookmetamethod(game, "__index", newcclosure(function(...)
local self, k = ...
if not checkcaller() and k == "Size" and self.Name == "Head" then
  return Vector3.new(1.67225, 0.835624, 0.835624)
end
return antihitbox(...)
end))

--* Head Hitbox Expander *--

local HitBX = 3
local HitBY = 3
local HitBZ = 3
local HitBT = 0.5

HeadHitboxTab:AddToggle('EnabledHB', { Text = 'enabled', Default = false, Tooltip = nil, })
Toggles.EnabledHB:OnChanged(function(EnabledHBB)
if EnabledHBB == true then
  for v, i in pairs(workspace:GetChildren()) do
    if i:FindFirstChild("HumanoidRootPart") then
      i.Head.Size = Vector3.new(HitBX, HitBY, HitBZ)
      i.Head.Transparency = HitBT
    end
  end
  game.ReplicatedStorage.Player.Head.Size = Vector3.new(HitBX, HitBY, HitBZ)
elseif EnabledHBB == false then
  for v, i in pairs(workspace:GetChildren()) do
    if i:FindFirstChild("HumanoidRootPart") then
      i.Head.Size = Vector3.new(1.67225, 0.835624, 0.835624)
      i.Head.Transparency = 0
    end
  end
  game.ReplicatedStorage.Player.Head.Size = Vector3.new(1.67225, 0.835624, 0.835624)
end
end)

HeadHitboxTab:AddSlider('HitboxT_Slider', {Text = 'transparency', Default = 0.5, Min = 0, Max = 1, Rounding = 2, Suffix = "%", Compact = true}):OnChanged(function(hitboxTransparency)
HitBT = hitboxTransparency
end)

HeadHitboxTab:AddSlider('HitboxXSize_Slider', {Text = 'x-yize:', Default = 3, Min = 0, Max = 6, Rounding = 2, Suffix = "%", Compact = false}):OnChanged(function(HitboxXSize)
HitBX = HitboxXSize
end)

HeadHitboxTab:AddSlider('HitboxYSize_Slider', {Text = 'y-size:', Default = 3, Min = 0, Max = 6, Rounding = 2, Suffix = "%", Compact = false}):OnChanged(function(HitboxYSize)
HitBY = HitboxYSize
end)

HeadHitboxTab:AddSlider('HitboxZSize_Slider', {Text = 'z-size:', Default = 3, Min = 0, Max = 6, Rounding = 2, Suffix = "%", Compact = false}):OnChanged(function(HitboxZSize)
HitBZ = HitboxZSize
end)

--
local ChamsTabBox = Tabs.MainTab:AddRightTabbox('chams')
local ChamsTab = ChamsTabBox:AddTab('chams')

--* Chams *--

ChamsTab:AddToggle('Chams', {Text = 'enabled', Default = false}):AddColorPicker("OutlineColorPicker", {Default = Color3.fromRGB(255, 0, 0)}):AddColorPicker("FillColorPicker", {Default = Color3.fromRGB(0, 1, 0)}):OnChanged(function(Value)
Options.OutlineColorPicker:OnChanged(function(OutlineValue)
for _, a in ipairs(workspace:GetChildren()) do
  local b = a:FindFirstChild("Chams")
  if b and b:IsA("Highlight") then
    b.OutlineColor = OutlineValue
  end
end
end)
Options.FillColorPicker:OnChanged(function(FillValue)
for _, a in ipairs(workspace:GetChildren()) do
  local b = a:FindFirstChild("Chams")
  if b and b:IsA("Highlight") then
    b.FillColor = FillValue
  end
end
end)
end)

local function runChams()
  while Toggles.Chams.Value do
    wait()
    for i, a in ipairs(workspace:GetChildren()) do
      if a:FindFirstChild("HumanoidRootPart") then
        if not a:FindFirstChild("Chams") then
          if a ~= game:GetService("Workspace").Ignore.FPSArms then
            local b = Instance.new("Highlight", a)
            b.Adornee = a
            b.Name = "Chams"
            b.DepthMode = Options.DepthMode.Value
            b.FillColor = Options.FillColorPicker.Value
            b.FillTransparency = Options.HighlightChams.Value
            b.OutlineColor = Options.OutlineColorPicker.Value
            b.OutlineTransparency = Options.HighlightChams2.Value
          end
        end
      end
    end
  end
  for _, a in ipairs(workspace:GetChildren()) do
    local b = a:FindFirstChild("Chams")
    if b and b:IsA("Highlight") then
      b:Destroy()
    end
  end
end
Toggles.Chams:OnChanged(runChams)

Options.OutlineColorPicker:SetValueRGB(Color3.fromRGB(255, 0, 0))
Options.FillColorPicker:SetValueRGB(Color3.new(0, 1, 0))

ChamsTab:AddSlider('HighlightChams', {Text = 'fill transparency',Default = 1,Min = 0,Max = 1,Rounding = 2,Compact = true})
Options.HighlightChams:OnChanged(function(h12rt)
for _, a in ipairs(workspace:GetChildren()) do
  local b = a:FindFirstChild("Chams")
  if b and b:IsA("Highlight") then
    b.FillTransparency = h12rt
  end
end
end)

ChamsTab:AddSlider('HighlightChams2', {Text = 'outline transparency',Default = 0,Min = 0,Max = 1,Rounding = 2,Compact = true})
Options.HighlightChams2:OnChanged(function(h12rt)
for _, a in ipairs(workspace:GetChildren()) do
  local b = a:FindFirstChild("Chams")
  if b and b:IsA("Highlight") then
    b.OutlineTransparency = h12rt
  end
end
end)

ChamsTab:AddDropdown('DepthMode', {Values = { 'AlwaysOnTop', 'Occluded' }, Default = 1, Multi = false, Text = 'chams type:'}):OnChanged(function(value)
Options.DepthMode:OnChanged(function(h12zrt)
for _, a in ipairs(workspace:GetChildren()) do
  local b = a:FindFirstChild("Chams")
  if b and b:IsA("Highlight") then
    b.DepthMode = h12zrt
  end
end
end)
end)

--
local VisualsTabBox = Tabs.MainTab:AddLeftTabbox('crosshair')
local CrosshairXTab = VisualsTabBox:AddTab('crosshair')

--* Crosshair *--

local CrossHairX = Drawing.new("Circle"), Drawing.new("Circle")
--
CrossHairX.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
CrossHairX.Thickness = 1
CrossHairX.ZIndex = 3

do
  CrosshairXTab:AddToggle('zCrosshairX_Toggle', {Text = 'enabled', Default = false}):AddColorPicker("eCrosshairX_Color", {Default = Color3.fromRGB(208, 123, 255)}):OnChanged(function()
  CrossHairX.Visible = Toggles.zCrosshairX_Toggle.Value
  end)

  Options.eCrosshairX_Color:OnChanged(function()
  CrossHairX.Color = Options.eCrosshairX_Color.Value
  end)

  CrosshairXTab:AddToggle('Crosshair_Filled1', {Text = 'filled', Default = false}):OnChanged(function()
  CrossHairX.Filled = Toggles.Crosshair_Filled1.Value
  end)

  CrosshairXTab:AddSlider('Crosshair_Radius', {Text = 'size', Suffix = "Â°", Default = 2, Min = 0, Max = 100, Rounding = 0, Compact = true}):OnChanged(function(CrosshairXRadius)
  CrossHairX.Radius = CrosshairXRadius
  end)
end

local inputConnection1
CrosshairXTab:AddDropdown('Crosshair_Positon', {Values = { 'To Screen', 'To Mouse' }, Default = 1, Multi = false, Text = 'position:'}):OnChanged(function(bool2)
if inputConnection1 then
  inputConnection1:Disconnect()
end
if bool2 == "To Screen" then
  CrossHairX.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
elseif bool2 == "To Mouse" then
  inputConnection1 = UserInputService.InputChanged:Connect(function(input)
  if input.UserInputType == Enum.UserInputType.MouseMovement then
    local mousePosition = input.Position
    local fovOffset = Vector2.new(0, 36)
    CrossHairX.Position = Vector2.new(mousePosition.X, mousePosition.Y) + fovOffset
  end
  end)
end
end)

--
local ChatSpammerTabBox = Tabs.MainTab:AddLeftTabbox('chat spammer')
local ChatSpammerTab = ChatSpammerTabBox:AddTab('chat spammer')

--* Chat Spammer *--

local enabled = false
local chatSpammerText = ""
local WaitTime = 3
local function spamChat()
  local args = {[1] = 27, [2] = chatSpammerText, [3] = "Global"}
  while enabled do
    game:GetService("Players").LocalPlayer.RemoteEvent:FireServer(unpack(args))
    wait(WaitTime)
  end
end

ChatSpammerTab:AddToggle('Enabled_Toggle1', {Text = 'enabled', Default = false}):OnChanged(function(value)
enabled = value
if enabled then
  spamChat()
end
end)

ChatSpammerTab:AddSlider('SpamChatSpeed', {Text = 'speed',Suffix = "s", Default = 3, Min = 1, Max = 10, Rounding = 0, Compact = true,}):OnChanged(function(SpamChatSpeedValue)
WaitTime = SpamChatSpeedValue
end)

ChatSpammerTab:AddInput('ChatSpammer', {Default = "If you cant beat them join them [velocity] on top!", Numeric = false, Finished = true, Text = 'chat spammer:', Placeholder = "Chat Spam Custom Text [HERE]"}):OnChanged(function(value)
chatSpammerText = value
end)

--
local ArmVisTabBox = Tabs.MainTab:AddRightTabbox('arm visuals')
local ArmVisTab = ArmVisTabBox:AddTab('local chams')

--* Local Chams *--

local CARMS = false
ArmVisTab:AddToggle('CLRT',{Text = 'arm color',Default = false,Tooltip = "Off/On",}):AddColorPicker('ARCCCC', {Default = Color3.fromRGB(0,0,0),Title = 'Arms Color'})
Options.ARCCCC:OnChanged(function(ARMC)
if CARMS then
  game:GetService("Workspace").Ignore.FPSArms.LeftUpperArm.Color = ARMC
  game:GetService("Workspace").Ignore.FPSArms.LeftLowerArm.Color = ARMC
  game:GetService("Workspace").Ignore.FPSArms.LeftHand.Color = ARMC
  game:GetService("Workspace").Ignore.FPSArms.RightUpperArm.Color = ARMC
  game:GetService("Workspace").Ignore.FPSArms.RightLowerArm.Color = ARMC
  game:GetService("Workspace").Ignore.FPSArms.RightHand.Color = ARMC
else
  game:GetService("Workspace").Ignore.FPSArms.LeftUpperArm.BrickColor = BrickColor.new("Dark stone grey")
  game:GetService("Workspace").Ignore.FPSArms.LeftLowerArm.BrickColor = BrickColor.new("Linen")
  game:GetService("Workspace").Ignore.FPSArms.LeftHand.BrickColor = BrickColor.new("Linen")
  game:GetService("Workspace").Ignore.FPSArms.RightUpperArm.BrickColor = BrickColor.new("Dark stone grey")
  game:GetService("Workspace").Ignore.FPSArms.RightLowerArm.BrickColor = BrickColor.new("Linen")
  game:GetService("Workspace").Ignore.FPSArms.RightHand.BrickColor = BrickColor.new("Linen")
end
end)
Toggles.CLRT:OnChanged(function(T)
CARMS = T
end)

ArmVisTab:AddDropdown('MaterialD', {Values = { 'Default', 'ForceField', 'Neon', 'CrackedLava' },Default = 1,Multi = false,Text = 'material:',Tooltip = 'Arms Material'}):OnChanged(function()
if Options.MaterialD.Value == "Default" then
  game:GetService("Workspace").Ignore.FPSArms.RightUpperArm.Material = "Fabric"
  game:GetService("Workspace").Ignore.FPSArms.RightLowerArm.Material = "SmoothPlastic"
  game:GetService("Workspace").Ignore.FPSArms.RightHand.Material = "SmoothPlastic"
  game:GetService("Workspace").Ignore.FPSArms.LeftUpperArm.Material = "Fabric"
  game:GetService("Workspace").Ignore.FPSArms.LeftLowerArm.Material = "SmoothPlastic"
  game:GetService("Workspace").Ignore.FPSArms.LeftHand.Material = "SmoothPlastic"
end
if Options.MaterialD.Value == "ForceField" then
  game:GetService("Workspace").Ignore.FPSArms.RightUpperArm.Material = "ForceField"
  game:GetService("Workspace").Ignore.FPSArms.RightLowerArm.Material = "ForceField"
  game:GetService("Workspace").Ignore.FPSArms.RightHand.Material = "ForceField"
  game:GetService("Workspace").Ignore.FPSArms.LeftUpperArm.Material = "ForceField"
  game:GetService("Workspace").Ignore.FPSArms.LeftLowerArm.Material = "ForceField"
  game:GetService("Workspace").Ignore.FPSArms.LeftHand.Material = "ForceField"
end
if Options.MaterialD.Value == "Neon" then
  game:GetService("Workspace").Ignore.FPSArms.RightUpperArm.Material = "Neon"
  game:GetService("Workspace").Ignore.FPSArms.RightLowerArm.Material = "Neon"
  game:GetService("Workspace").Ignore.FPSArms.RightHand.Material = "Neon"
  game:GetService("Workspace").Ignore.FPSArms.LeftUpperArm.Material = "Neon"
  game:GetService("Workspace").Ignore.FPSArms.LeftLowerArm.Material = "Neon"
  game:GetService("Workspace").Ignore.FPSArms.LeftHand.Material = "Neon"
end
if Options.MaterialD.Value == "CrackedLava" then
  game:GetService("Workspace").Ignore.FPSArms.RightUpperArm.Material = "CrackedLava"
  game:GetService("Workspace").Ignore.FPSArms.RightLowerArm.Material = "CrackedLava"
  game:GetService("Workspace").Ignore.FPSArms.RightHand.Material = "CrackedLava"
  game:GetService("Workspace").Ignore.FPSArms.LeftUpperArm.Material = "CrackedLava"
  game:GetService("Workspace").Ignore.FPSArms.LeftLowerArm.Material = "CrackedLava"
  game:GetService("Workspace").Ignore.FPSArms.LeftHand.Material = "CrackedLava"
end
end)

ArmVisTab:AddInput('', {Default = 'rbxassetid://11414633855', Numeric = false, Finished = true, Text = 'Texture ID:', Placeholder = 'rbxassetid://...'}):OnChanged(function(TextureID)
game:GetService("Workspace").Ignore.FPSArms.LeftUpperArm.TextureID = TextureID
game:GetService("Workspace").Ignore.FPSArms.LeftLowerArm.TextureID = TextureID
game:GetService("Workspace").Ignore.FPSArms.LeftHand.TextureID = TextureID
game:GetService("Workspace").Ignore.FPSArms.RightUpperArm.TextureID = TextureID
game:GetService("Workspace").Ignore.FPSArms.RightLowerArm.TextureID = TextureID
game:GetService("Workspace").Ignore.FPSArms.RightHand.TextureID = TextureID
end)

--
local HudTabBox = Tabs.MainTab:AddLeftTabbox('hud')
local HudTab = HudTabBox:AddTab('hud')

--* Hud *--

HudTab:AddToggle('AWASZnfh', {Text = "remove server info",Default = false,Tooltip = "Hides Server Info",}):OnChanged(function(Chillax1)
if Chillax1 == true then
  game:GetService("Players").LocalPlayer.PlayerGui.GameUI.ServerInfo.Visible = false
elseif Chillax1 == false then
  game:GetService("Players").LocalPlayer.PlayerGui.GameUI.ServerInfo.Visible = true
end
end)

HudTab:AddToggle('AWAaSZasanfh', {Text = "remove server status",Default = false,Tooltip = "Hides Server Status",}):OnChanged(function(Chillax2)
if Chillax2 == true then
  game:GetService("Players").LocalPlayer.PlayerGui.GameUI.ServerStatus.Visible = false
elseif Chillax2 == false then
  game:GetService("Players").LocalPlayer.PlayerGui.GameUI.ServerStatus.Visible = true
end
end)

HudTab:AddToggle('GnAf', {Text = "hide chat",Default = false,Tooltip = "Hides chat )",}):OnChanged(function(HideChat)
if HideChat == true then
  game:GetService("Players").LocalPlayer.PlayerGui.GameUI.Chat.Position = UDim2.new(0, 0, 1, 0)
elseif HideChat == false then
  game:GetService("Players").LocalPlayer.PlayerGui.GameUI.Chat.Position = UDim2.new(0, 0, 0, 0)
end
end)

HudTab:AddLabel('custom inventory:'):AddColorPicker('Inventory_Color', { Default = Color3.fromRGB(80,80,80)})
Options.Inventory_Color:OnChanged(function(Inventory_Color_Value)
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Armor.ItemSlot26.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Armor.ItemSlot27.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Armor.ItemSlot28.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Armor.ItemSlot29.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot6.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot7.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot8.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot9.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot10.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot11.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot12.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot13.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot14.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot15.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot16.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot17.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot18.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot19.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot20.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot21.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot22.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot23.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot24.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.ItemSlot25.BackgroundColor3 = Inventory_Color_Value
end)

HudTab:AddLabel('energy:'):AddColorPicker('Energy_Color_Value', { Default = Color3.fromRGB(197,187,40)})
Options.Energy_Color_Value:OnChanged(function(Energy_Color_Value)
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.Vitals.EnergyFrame.Energy.BackgroundColor3 = Energy_Color_Value
end)

HudTab:AddLabel('health:'):AddColorPicker('Health_Color_Value', { Default = Color3.fromRGB(78,153,74)})
Options.Health_Color_Value:OnChanged(function(Health_Color_Value)
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.Vitals.HealthFrame.Health.BackgroundColor3 = Health_Color_Value
end)

HudTab:AddLabel('ammo:'):AddColorPicker('Ammo_Color_Value', { Default = Color3.fromRGB(255,255,255)})
Options.Ammo_Color_Value:OnChanged(function(Ammo_Color_Value)
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Ammo.TextColor3 = Ammo_Color_Value
end)

HudTab:AddSlider('Vitals_Transparency', {Text = 'vitals transparency', Suffix = "%", Default = 0.1, Min = 0, Max = 1, Rounding = 2, Compact = true}):OnChanged(function(VitalsTransparency)
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.Vitals.EnergyFrame.Energy.BackgroundTransparency = VitalsTransparency
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.Vitals.HealthFrame.Health.BackgroundTransparency = VitalsTransparency
end)

HudTab:AddSlider('Background_Transparency', {Text = 'inventory transparency', Suffix = "%", Default = 0.7, Min = 0, Max = 1, Rounding = 2, Compact = true}):OnChanged(function(InventoryTransparency)
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Inventory.BackgroundTransparency = InventoryTransparency
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Hotbar.BackgroundTransparency = InventoryTransparency
game:GetService("Players").LocalPlayer.PlayerGui.GameUI.FPS.BottomCenter.Armor.BackgroundTransparency = InventoryTransparency
end)

--
local OtherTabBox = Tabs.MainTab:AddLeftTabbox('other')
local OtherTab = OtherTabBox:AddTab('other')

--* Other *--

OtherTab:AddToggle('', {Text = "jump crouch",Default = false,}):AddKeyPicker('JumpCrouchKey', {Default='Q',SyncToggleState=true,Mode='Toggle',Text='Jump Crouch',NoUI=false})
local stoprun = false
task.spawn(function()
while true do
  local state = Options.JumpCrouchKey:GetState()
  if state then
    keypress(0x57)
    keypress(0x10)
    wait(0.05)
    keypress(0x43)
    keypress(0x20)
    keyrelease(0x20)
    wait(0.5)
    keyrelease(0x43)
    wait(1)
  end
  if Library.Unloaded then break end
  wait()
end
end)
task.spawn(function()
while task.wait() do
  local state = Options.JumpCrouchKey:GetState()
  if not state then
    if stoprun then
      keyrelease(0x57)
      keyrelease(0x10)
      stoprun = false
    end
  else
    stoprun = true
  end
end
end)

OtherTab:AddLabel('loot all'):AddKeyPicker('gakb', { Default = 'F', SyncToggleState = false, Mode = 'Toggle', Text = 'loot all', NoUI = true })
Options.gakb:OnClick(function()
for i = 1, 20 do
  wait(0.03)
  local ohNumber1 = 12
  local ohNumber2 = i
  local ohBoolean3 = true
  game:GetService("Players").LocalPlayer.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
end
end)

-------------------------------------------------------------------------------------------------
--// UI Settings \\--

--// Game
local GameID = Tabs.UISettings:AddLeftGroupbox('Game')
GameID:AddInput('GameID_Check', {Default = 'Game ID', Numeric = true, Finished = false, Text = 'Game ID:', Placeholder = 'Game ID Here'})
GameID:AddButton('Join Game', function()
game:GetService("TeleportService"):Teleport(Options.GameID_Check.Value, plr)
end)

--// Menu
local MenuGroup = Tabs.UISettings:AddRightGroupbox('Menu')
MenuGroup:AddLabel(""..game:GetService("Players").LocalPlayer.PlayerGui.GameUI.ServerInfo.Text.."", true)
local playerCountLabel = MenuGroup:AddLabel("Player Count: 0", nil, true)
local function updatePlayerCount()
  local playerCount = #game:GetService("Players"):GetPlayers()
  playerCountLabel:SetText("Players Online: " .. playerCount)
end
game:GetService("Players").PlayerAdded:Connect(updatePlayerCount)
game:GetService("Players").PlayerRemoving:Connect(updatePlayerCount)
updatePlayerCount()
MenuGroup:AddLabel(' Made by:<font color="#de6cff"> velocity#9108</font> ð', true)

MenuGroup:AddButton('Unload Script', function() Library:Unload()
for i,v in pairs(Toggles) do
  v:SetValue(false)
  Library:Notify('Unloaded!', 1)
end
end)

MenuGroup:AddButton('Panic Button', function()
for i,v in pairs(Toggles) do
  v:SetValue(false)
  Library:Notify('Panic Button!', 1)
end
end)

MenuGroup:AddButton('Copy Discord', function()
if pcall(setclipboard,"https://discord.gg/dWvMFGkT") then
  Library:Notify('Successfully copied discord link to your clipboard!', 5)
end
end)

local function GetCurrentTime()
  local currentTime = os.date("%X")
  return currentTime
end
MenuGroup:AddToggle('WatermarkToggle', {Text = 'Watermark',Default = false,Tooltip = nil,})
Toggles.WatermarkToggle:OnChanged(function()
while Toggles.WatermarkToggle.Value do
  task.wait(1)
  local fps = string.format('%.0f', game.Stats.Workspace.Heartbeat:GetValue())
  local ping = string.format('%.0f', game.Stats.Network.ServerStatsItem["Data Ping"]:GetValue())
  local currentTime = GetCurrentTime()
  Library:SetWatermark('velocity.cc - FPS: '.. fps .. ' | Ping: ' .. ping .. ' | Time: ' .. currentTime)
  Library:SetWatermarkVisibility(Toggles.WatermarkToggle.Value)
end
end)
Library:SetWatermarkVisibility(false)

MenuGroup:AddToggle('UISettings_KeybindFrameVisibility', {Text = 'Keybind', Default = true}):OnChanged(function()
Library.KeybindFrame.Visible = Toggles.UISettings_KeybindFrameVisibility.Value
end)

MenuGroup:AddLabel('Menu Keybind'):AddKeyPicker('MenuKeybind', { Default = 'Insert', NoUI = true, Text = 'Menu keybind' })
Library.ToggleKeybind = Options.MenuKeybind

--// Manager
SaveManager:SetLibrary(Library)
SaveManager:SetFolder('velocity.cc/folder')
SaveManager:BuildConfigSection(Tabs.UISettings)
SaveManager:IgnoreThemeSettings()
ThemeManager:SetLibrary(Library)
ThemeManager:SetFolder('velocity.cc/themes')
ThemeManager:ApplyToTab(Tabs.UISettings)

--// Script Loaded
local Time = (string.format("%."..tostring(Decimals).."f", os.clock() - Clock))
Library:Notify(("Script [Loaded] In - "..tostring(Time).."s"), 15)

--Wrapping function - needed to unload(Keep at end of script)
loadstring(game:HttpGet('https://raw.githubusercontent.com/EIOlmqV6v1owgJBEoqj5lK9p01SFE2THpxcOnvX/LinoriaBurnEdition/main/LoaderManager.lua'))
